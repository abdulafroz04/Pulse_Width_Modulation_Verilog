module pwm(
    input wire clk,         // Clock input from FPGA clock source
    input wire rst,         // Reset input
    input wire [7:0] duty_cycle, // Duty cycle input (0-255)
    output wire pwm_out     // PWM output
);

reg [7:0] counter = 0;     // Counter to compare with duty cycle
reg pwm_internal;         // Internal PWM signal

always @(posedge clk or posedge rst) begin
    if (rst) begin
        counter <= 0;      // Reset the counter
        pwm_internal <= 0; // Reset the PWM signal
    end else begin
        counter <= counter + 1; // Increment the counter on each clock cycle
        if (counter < duty_cycle) begin
            pwm_internal <= 1; // PWM signal is high when counter < duty cycle
        end else begin
            pwm_internal <= 0; // PWM signal is low when counter >= duty cycle
        end
    end
end

assign pwm_out = pwm_internal;

endmodule
